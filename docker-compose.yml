services:
  controlefluxocaixa.api:
    image: ${DOCKER_REGISTRY-}controlefluxocaixaapi
    build:
      context: .
      dockerfile: src/ControleFluxoCaixa.Api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - DB_SERVER=postgres-primary
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=YourStrong!Password
      - DB_DATABASE=controlefluxocaixa
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - app-network
    depends_on:
      - postgres-primary
      - rabbitmq

  controlefluxocaixa.worker.mensageria.transacao:
    image: ${DOCKER_REGISTRY-}controlefluxocaixaworkermensageriatransacao
    build:
      context: .
      dockerfile: src/ControleFluxoCaixa.Worker.Mensageria.Transacao/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_SERVER=postgres-primary
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=YourStrong!Password
      - DB_DATABASE=controlefluxocaixa
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - app-network
    depends_on:
      - postgres-primary
      - rabbitmq

  postgres-primary:
    image: postgres:15
    container_name: postgres_primary
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourStrong!Password
      POSTGRES_DB: controlefluxocaixa
    ports:
      - "5432:5432"
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network

  weave-scope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    ports:
      - "4040:4040"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-primary-data:
  portainer_data:
