services:
  controlefluxocaixa.api:
    image: ${DOCKER_REGISTRY-}controlefluxocaixaapi
    build:
      context: .
      dockerfile: src/ControleFluxoCaixa.Api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - DB_SERVER=sql-primary
      - DB_PORT=1434
      - DB_USER=sa
      - DB_PASSWORD=YourStrong!Password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - app-network
    depends_on:
      - sql-primary
      - rabbitmq

  controlefluxocaixa.worker.mensageria.transacao:
    image: ${DOCKER_REGISTRY-}controlefluxocaixaworkermensageriatransacao
    build:
      context: .
      dockerfile: src/ControleFluxoCaixa.Worker.Mensageria.Transacao/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_SERVER=sql-primary
      - DB_PORT=1434
      - DB_USER=sa
      - DB_PASSWORD=YourStrong!Password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
    networks:
      - app-network
    depends_on:
      - sql-primary
      - rabbitmq

  sql-primary:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_primary
    ports:
      - "1434:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong!Password"
    volumes:
      - sql-primary-data:/var/opt/mssql
      - ./scripts/setup-primary.sql:/docker-entrypoint-initdb.d/setup-primary.sql
    networks:
      - app-network

  sql-secondary:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_secondary
    ports:
      - "1435:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong!Password"
    volumes:
      - sql-secondary-data:/var/opt/mssql
      - ./scripts/setup-secondary.sql:/docker-entrypoint-initdb.d/setup-secondary.sql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network

  weave-scope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    ports:
      - "4040:4040"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    name: app-network # Nome fixo para a rede

volumes:
  sql-primary-data:
  sql-secondary-data:
  portainer_data:
